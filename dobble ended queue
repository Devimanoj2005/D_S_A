#include <stdio.h>
#define MAX 10

int QUEUE[MAX];
int front = -1, rear = -1;

// Function to check overflow
int Overflow() {
    return rear == MAX - 1;
}

// Function to check underflow
int Underflow() {
    return (front == -1) || (front > rear);
}

// Enqueue operation
void enqueue(int element) {
    if (Overflow()) {
        printf("Queue is full\n");
    } else {
        if (front == -1) {
            front = 0;
        }
        rear++;
        QUEUE[rear] = element;
        printf("Element %d has been added successfully\n", element);
    }
}

// Dequeue operation
void dequeue() {
    if (Underflow()) {
        printf("Queue is empty\n");
    } else {
        printf("Deleted element is %d\n", QUEUE[front]);
        front++;
        if (front > rear) {
            front = -1;
            rear = -1;
        }
    }
}

// Display operation
void display() {
    if (Underflow()) {
        printf("Queue is empty\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", QUEUE[i]);
        }
        printf("\n");
    }
}

// Main function
int main() {
    int flow = 1;

    while (flow == 1) {
        int option;
        printf("\nChoose the operation for queue:\n");
        printf("1. Enqueue\n2. Dequeue\n3. Display\n4. Exit\n");
        printf("Enter option: ");
        scanf("%d", &option);

        switch (option) {
            case 1: {
                int element;
                printf("Enter the element: ");
                scanf("%d", &element);
                enqueue(element);
                break;
            }
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                flow = 0;
                break;
            default:
                printf("Wrong option\n");
                break;
        }
    }

    return 0;
}